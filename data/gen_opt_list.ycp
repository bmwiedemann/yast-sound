{
    include "browser.ycp";
    include "gen_routines.ycp";

    // collect param descriptions of all snd-card-* modules

    map mod_idx = SCR::Read(.target.ycp, "./module_index.ycp");

    list mods = maplist(`k, `v, mod_idx, ``(v)); // SCR::Dir(.modinfo.misc);


//    mods = filter(`e, mods, ``(regexpmatch(e, "^snd-card-.*")));
    map modopts = $[];
    map subopt = $[];


    foreach(`e, mods, 
    ``{
	subopt = SCR::Read(add(.modinfo.misc, e));
	modopts = add(modopts, e, subopt);
    });

    string mod_name = "";
    string mod_descr = "";
    map mod_params = $[];

    map database = $[];

    foreach (`e, mods,
    ``{
	mod_name = e;
	mod_descr = lookup(lookup(modopts, mod_name, $[]), "module_description", "");
	mod_params = $[];

	database = add(database, mod_name, 
			$[
			    "description" : mod_descr,
			    "params" : mod_params
			]);
    });

    string kernel_ver = lookup(SCR::Execute(.target.bash_output, "uname -r", $[]), "stdout", "");
    kernel_ver = select(splitstring(kernel_ver, "\n"), 0, "");
    string generic_string = SCR::Read(.target.string, "/lib/modules/"+kernel_ver+"/modules.generic_string");
    list gs = splitstring(generic_string, "\n");

    string pattern = "(snd-[^ \t]*)[\t ]*info_parm_(snd_[^=]*)=enable:\\(snd_enable\\)(.*)";

    list ltmp = [];
    list lx = [];

    map tmpmap = $[];
    string modname = "";
    string parmname = "";
    string descr = "";

y2error("entering stage #6");


    foreach(`e, gs,
    ``{
	lx = regexptokenize(e, pattern);
	y2error(e);
	if (size(lx) > 0 && !contains(["snd_index", "snd_enable", "snd_id"], select(lx, 1, "")))
	{
	    tmpmap = parse_line(select(lx, 2, ""));
	    modname = select(lx, 0, "");
	    parmname = select(lx, 1, "");
	    descr = lookup(lookup(modopts, modname, $[]), parmname, $[]);

	    // these two declaration must be here
	    any anydescr = descr;
	    locale locdescr = anydescr;

	    y2error("%1 %2 %3", modname, parmname, tmpmap);

	    map oldmap = lookup(database, modname, $[]);
	    map oldopts = lookup(oldmap, "params", $[]);

	    tmpmap = add (tmpmap, "descr", locdescr);

	    oldopts = add(oldopts, parmname, tmpmap);
	    oldmap = add(oldmap, "params", oldopts);
	    database = add(database, modname, oldmap);
	}
    });

//    BrowseTree(database);
    SCR::Write(.target.ycp, "./modlist.ycp.in", database);
}
