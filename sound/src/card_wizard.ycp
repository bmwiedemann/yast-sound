/**
 *
 *
 * File:
 *   sound_card_wizard.ycp
 *
 * Module:
 *   Sound
 *
 * Authors:
 *   Dan Meszaros <dmeszar@suse.cz>
 *
 * $Id$
 *
 * Snd card setup wizard.
 *
 *
 */
{

/*
 * global variables
 *
 */

import "Sound";

list save_entry	= [];
integer card_id	= 0;
integer flag	= 0;
symbol  ui	= nil;
list save_info	= [];
boolean finish	= false;

global define symbol _showName()
``{
    string modelname = lookup(save_entry, "model", "");
    string modname = lookup(save_entry, "module", "");
    boolean has_joy = false;
    if (lookup(lookup(Sound::db_modules, modname, $[]), "joystick", $[]) != $[])
    {
	has_joy = true;
    }

    map res = DisplayName(modelname, lookup(save_entry, "alias", ""), card_id, flags, has_joy);
    symbol ui = lookup(res, "ui", nil);
    return ui;
}

global define symbol _options()
``{
    map res = sound_options(save_entry);
    symbol ui = lookup(res, "ui", nil);
    if (ui == `next)
    {
	save_entry = lookup(res, "return", $[]);
        save_entry = add_common_options(save_entry, card_id);
    }
    return ui;
}

global define symbol _quick()
``{
    map res = sound_volume(save_entry, card_id, finish, true, save_info);
    symbol ui = lookup(res, "ui", nil);
    return ui;
}

global define symbol _volume()
``{
    map res = sound_volume(save_entry, card_id, finish, false, save_info);
    symbol ui = lookup(res, "ui", nil);
    return ui;
}

global define symbol _optVolume()
``{
    return _volume();
}


    /**
     * Wizard steps: 1. displayname 
     * <br>
     * 2. modprobe and volume settings
     * @param   card_id index of configured car
     * @param   flags defines which radioboxes has to be enabled (0x1 - first, 0x2 second, 0x4 third...)
     * @param   finish true if no complex dialog is to be called (then the popup "Config will be saved.." will appear)
     * @return  map with save info, as required by sound_write for one cards
     */
global define map OneCardWizard (map save_entry, integer card_id,  
			     integer flags, boolean finish, list save_info) ``{
            // 3rd param for "sound_module" will be defined later
            // TODO: add nm256hack
	map aliases = $[
		"name"	    : ``(_showName()),
		"options"   : ``(_options()),
		"volume"    : ``(_volume()),
		"optVolume" : ``(_optVolume()),
		"quick"	    : ``(_quick())
	    ];
	

	map sequence = $[
	    "ws_start": "name",
	    "name":
	    $[
		`quick: "quick",
		`skip : `back,
	        `next:  "volume",
	        `options: "options",
		`abort:	`abort
	    ],
	    "options":
	    $[
	        `next: "optVolume",
	        `abort: `abort
	    ],
	    "volume":
	    $[
		`next: `next,
		`abort: `abort
	    ],
	    "optVolume":
	    $[
		`next: `next,
		`abort: `abort
	    ],
	    "quick":
	    $[
		`next: `next,
		`abort: `abort
	    ]
	];

    map opts = lookup(save_entry, "options", $[]);
    save_entry = add_common_options(save_entry, card_id);
    save_entry = add_alias(save_entry, card_id);
    
    symbol ui = WizardSequencer(aliases, sequence);
    return $["ui": ui, "return": save_entry];
    
    }


}
