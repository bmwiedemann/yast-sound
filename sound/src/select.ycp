/**
 * File:
 *   sound_select
 *
 * Module:
 *   Sound
 *
 * Summary:
 *   sound card selection dialog
 *
 * Authors:
 * Dan Meszaros <dmeszar@suse.cz>
 *
 *
 * $Id$
 *
 * Params: 1st ... list of strings of new hardware
 *         2nd ... list of strings of configured hardware
 */

{
    textdomain "sound";
    include "ui/summary.ycp";

    global define sound_select(list sound_cards, list save_info) ``{

    // show the dialog
    string confhw = ConfCardsRT(save_info);

    selectHardware( sound_cards,
                    confhw);

    UI::ChangeWidget(`id(`next), `Label, UI::FinishButtonLabel());

    symbol ui = nil;
    do
    {
	ui = UI::UserInput();
	if ((ui == `abort || ui == `cancel) && ReallyAbort())
        {
	    return $["ui": `abort];
	}
    } while (!contains([`back, `next, `edit_button, `configure_button], ui));

    symbol type = nil;
    integer index = 0;

    if (ui == `configure_button)
    {
	type = `new;
	index = UI::QueryWidget(`id(`detected_selbox), `CurrentItem);
	ui = `configure;
    }

    if (ui == `configure && index < 0)
    {
	type = `manual;
	index = -1;
    }

    if (ui == `edit_button)
    {
	ui = `detail;
    }

    return $["ui" : ui, "type" : type, "id" : index];

}

}
