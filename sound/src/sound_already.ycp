/*
 * checks (and displays) already made configuration of alsa sound
 * Dan Veselý <dan@suse.cz>, 2000
 *
 * $Id$
 *
 *
 * no parameters are needed
 *
 * returns nil if no configured sound cards were found (/proc/asound/cards doesn't exists)
 *         user input (`back, `next or `cancel) if an attempt of reset was done 
 *
 */

{

				// quits all sound programs; if
				// someone want to reset the
				// configuration (remove the modules),
				// nothing using sound devices can be
				// running, popup dialog with
				// confirmation is displayed
	define QuitAllSoundPrograms () ``{
	    
	    integer ret = Shell ("/bin/fuser /dev/dsp* /dev/audio* /dev/mixer* /dev/midi* /dev/mixer*");
	    if (ret == 0) {		
		
				// To translators: To reset the sound configuration these programs must be terminated
				// To translators: label message
		string msg = UI (_("There are running programs using some audio device.\n"));
				// To translators: label message
		msg = msg + UI (_("To reset the configuration these programs will be terminated. Proceed?"));
		
		boolean terminate = UI(`YesOrNo (msg, _("&Yes"), _("&No")));
		if (terminate) {
		    Shell ("/bin/fuser -k /dev/dsp* /dev/audio* /dev/mixer* /dev/midi* /dev/mixer*");
		}
		return terminate;
	    }
	    return true;
	};
	
	
	string help_text = UI (_("<p>No help text available.<p>"));

	boolean next = false;
	boolean back = true;

	list|void already_configured = nil;

	term con = `VBox ();
	
	if ((Shell ("/bin/ls /proc/asound/cards")) == 0)
	    already_configured = SCR(`Read(.proc.asound.cards));

	if (already_configured == nil) { // no already configured sound cards
	    return nil;
	}
	else if (already_configured == []) { // "--- no soundcards ---" or other unrecognized output
	    con = `HVCenter (
		`ReplacePoint (`id(`wo),
			       `VBox(
				// To translators: label message
				   `Label (_("Incorrect sound configuration found.")),
				// To translators: button label
				   `PushButton (`id (`reset), _("&Reset"))
				   )));

				// Help text, if an attempt for configuration failed 1/2
	    help_text = UI (_("<p>The sound card does not function
 correctly although it has <b>previously</b> been configured. Possible
 causes are: 1. You have tried to configure the sound outside the
 <b>YaST2</b> and you were unsuccessful. 2. The card requires option
 values which you must enter manually. 3. You have passed some
 incorrect options or option values to the sound card module."));


				// Help text, if an attempt for configuration failed 2/2
    help_text = help_text + UI(_("<p>You can reset the configuration
 process by pressing the <i>Reset</i> button and try to configure the
 card again. Please refer to the <b>SuSE</b> help system, section
 'package description', series 'snd1', <b>alsa</b> package for more
 information."));
    


	}
	else {
	    list names = itemize_list (maplist (`i, already_configured, ``(lookup (i, "line1"))), 0);
      
	    con = `VBox(
				// To translators: selection box title
		`SelectionBox (_("Already configured sound cards"), names),
				// To translators: button label
		`PushButton (`id(`reset), _("&Reset"))
		);

	    				// Help text - existing sound card 1/2
	    help_text = UI(_("<p>There <b>already exists</b> a configured sound card.</p>"));
				// Help text - existing sound card 2/2
				// To translators: the only way to change the configuration is to delete an old one and create another
	    help_text = help_text + UI(_("<p>Currently, YaST2
 <b>cannot</b> be used for modifying existing sound card
 configurations. If you want to change a sound card's configuration,
 you must <b>reset</b> the existing card configuration and reconfigure
 the card from scratch.</p>"));
	    


	}
	
	    UI(`SetContents (_("Sound cards"), con, help_text, back, next));
	    
	    any ui = nil;

	    boolean unsuccess = false;
	    
	    repeat {
	    
		ui = UI(`UserInput ());

		
		
		if (ui == `reset) {

		    if (!test_mode) {
			
			QuitAllSoundPrograms ();
			
				// FIXME: by presing Reset, alsa configuration files should change !!
			Shell ("/etc/rc.d/alsasound stop");
			
			already_configured = nil;
			if ((Shell ("/bin/ls /proc/asound/cards")) == 0)
			    already_configured = SCR(`Read(.proc.asound.cards));
		    }
		    else
			already_configured = nil;
		    
		    if (already_configured != nil){

			con = `HVCenter(`Label(_("The previous configuration cannot be reset.")));

			    // Help text 1/2
			help_text = UI (_("<p>Removing of sound kernel modules were unsuccessful.</p>"));
			    // Help text 1/2
			help_text = help_text + UI (_("<p>This might
 be because there are in use by some program or you don't have
 privileges to do that.</p>"));
			
			
			
			unsuccess = true;
		    }
		    else {
			back = false;
			next = true;

			con = `HVCenter(`Label(_("The previous configuration has been reset.")));

						    // Help text 1/1
			help_text = UI (_("<p>The previous
 configuration has been reset. Now you can configure sound card again
 by pressing <i>Next</i>.</p>"));
			
			unsuccess = false;
		    }

		    UI(`SetContents (_("Sound cards"), con, help_text, back, next));
		}
		
		
	    } until (ui == `next || ui == `back || ui == `cancel);

	    if (unsuccess)
		CallFunction (`sound_already ());
	    
	    return ui;
	    
}

