/**
 * File:
 *   sound_select
 *
 * Module:
 *   Sound
 *
 * Summary:
 *   sound card selection dialog
 *
 * Authors: 
 * Dan Meszaros <dmeszar@suse.cz>
 * 
 * 
 * $Id$
 * 
 * Params: 1st ... list of strings of new hardware
 *         2nd ... list of strings of configured hardware
 */

{
    textdomain "sound";
    include "ui/summary.ycp";
//    include "sound/ui.ycp";
//    include "sound/routines.ycp";

    list sound_cards=Args(0);
    list save_info=Args(1);

    // show the dialog

    string confhw= ConfCardsRT(save_info);

    selectHardware( sound_cards, //maplist(`e, sound_cards, ``(lookup(e, "model", ""))),
                    confhw); //maplist(`e, save_info, ``(lookup(e, "model", ""))));

    UI(`ChangeWidget(`id(`next), `Label, UI(`FinishButtonLabel())));

    any ui=nil;
    repeat
    {
	ui=UI(`UserInput());
	if((ui==`abort || ui==`cancel) && ReallyAbort())
        {
	    return $["ui": `abort];
	}
    } until(ui==`back || ui==`next ||  ui==`edit_button || ui==`configure_button);

    symbol type=nil;
    integer index=0;
//    type=UI(`QueryWidget(`id(`action), `CurrentButton));

    if(ui==`configure_button)
    {
	type=`new;
	index=UI(`QueryWidget(`id(`detected_selbox), `CurrentItem));
	ui=`configure;
    }

    if(ui==`configure && index<0)
    {
	type=`manual;
	index=-1;
    }

    if(ui==`edit_button)
    {
	ui=`detail;
    }

    return $["ui": ui, "type":type, "id":index];

}
