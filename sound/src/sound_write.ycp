/**
 * File:
 *   sound_write.ycp
 * 
 * Module:
 *   Sound
 *
 * Summary:
 *   Provides saving /etc/modules.conf and volume.
 *
 * Authors:
 *   Dan Veselý <dan@suse.cz>, 2000
 *
 * $Id$
 *
 * Params:
 *         1st ... map with information to store with these keys:
 *                 "cards"  : <list> // list with all card-dependent information
 *                 "system" : <map> // list with all system dependent information
 *                 "other"  : <term> // function to call to provide some additional work
 *
 *                  each element of cards list will be a map with these keys:
 *
 *                                   "name"    : <string> // card name
 *                                   "modules" : <map>    // map for 'modules.conf' with "alias" and
 *                                                        // "options" keys
 *                                   "volume"  : <map>    // map for storing volume, map keys should be
 *                                                        // channels
 *
 *                  system will be a map with (possibly many more) these keys:
 *
 *                                   "modules" : <list> // list of maps for 'modules.conf' - "alias",
 *                                                      // "options"; it's list because more than one entry
 *                                                      // to 'modules.conf' will be needed
 *
 *                                   "volume"  : <map>  // "mixer" ... mixer command to set-up the volume 
 *                                                                     (must include $CHANNEL and $VOLUME substrings, i.e:
 *                                                                      "/usr/bin/amixer set \"$CHANNEL\" $VOLUME% unmute")
 *                                                      // "store" ... function to call to store the info.
 *                                   "rc"      : <map>  // map with rc.config entries (i.e. START_ALSA, START_ALSA_SEQ entry etc ...)
 *                 
 *
 *        2nd ... boolean - testmode
 *
 * Steps:
 *        1. save '/etc/modules.conf'
 *        2. save '/etc/rc.config'
 *        3. save volume
 *        4. call function to provide some additional work
 *
 * Return boolean true on success, false if failed
 */

{


    textdomain "sound";
//    include "sound/texts.ycp";


 //   map STRINGS = STRINGS_();

//    include "sound/write_routines.ycp";

      // ==== MAIN ====

    boolean test_mode	= false;
    list save_info	= Args (0);
    map rc_vars		= $[];

    string helptext	= "";
    string err_msg	= "";

      
    if (size (Args ()) > 1)
    {
	rc_vars = Args (1);
    }

				  // label message
    term con = `Label(_("Saving ..."));
				  // dialog title
    UI::SetWizardContents (_("Sound configuration"), con, helptext, false, false);
    UI::DisableWizardAbortButton();

    SaveVolume();

    SaveModulesEntry(save_info, [], false);
    SaveRCValues(rc_vars);
    
    return (size (err_msg) == 0);
}
